name: CI

on: [push, pull_request]

env:
  COLORTERM: 'yes'
  TERM: 'xterm-256color'
  PYTEST_ADDOPTS: '--color=yes'
  CONTAINER_RUNTIME: 'docker'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - "3.8"
        ansible:
          - stable-2.8
          - stable-2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          - stable-2.13
          - devel
        include:
          - python: "2.7"
            ansible: "stable-2.11"
          - python: "3.6"
            ansible: "stable-2.11"
          - python: "3.7"
            ansible: "stable-2.11"
            image_tag: "latest"
          - python: "3.9"
            ansible: "devel"
            image_tag: "nightly"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Ansible
        run: pip install git+https://github.com/ansible/ansible.git@${{ matrix.ansible }}
      - name: Set Environment to use mazer
        run: |
          echo "COLLECTION_COMMAND=mazer" >> $GITHUB_ENV
          pip install mazer
        if: matrix.ansible == 'stable-2.8'
      - name: Install dependencies
        run: make test-setup
      - name: Run basic tests
        run: make test
      - name: Run live tests
        run: IMAGE_TAG=${{ matrix.image_tag }} tests/run_container.sh make livetest
        if: ${{ matrix.image_tag }}

  sanity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install Ansible
        run: pip install git+https://github.com/ansible/ansible.git@devel
      - name: Install dependencies
        run: make test-setup
      - name: Run sanity check
        run: make SANITY_OPTS="--local" PYTHON_VERSION="3.8" sanity

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: pip install -r requirements-lint.txt
      - name: Run linter
        run: make lint
