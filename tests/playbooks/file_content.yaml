---
- hosts: localhost
  collections:
    - pulp.squeezer
  gather_facts: false
  vars_files:
    - vars/server.yaml
  vars:
    file1_sha256: "{{ lookup('file', 'data/file1.txt', lstrip=false, rstrip=false) | hash('sha256') }}"
  module_defaults: &pulp_module_defaults
    artifact: &pulp_connection_details
      pulp_url: "{{ pulp_url }}"
      username: "{{ pulp_username }}"
      password: "{{ pulp_password }}"
      validate_certs: "{{ pulp_validate_certs | default(true) }}"
    file_content:
      <<: *pulp_connection_details
    delete_orphans:
      <<: *pulp_connection_details
  tasks:
    - name: Delete orphans
      delete_orphans: {}
    - name: Create artifact
      artifact:
        file: data/file1.txt
        state: present
    - name: Clean openapi cache
      file:
        path: "{{ lookup('env', 'XDG_CACHE_HOME') | default('~/.cache') }}/squeezer"
        state: absent

- hosts: tests
  collections:
    - pulp.squeezer
  gather_facts: false
  vars_files:
    - vars/server.yaml
  vars:
    file1_sha256: "{{ lookup('file', 'data/file1.txt', lstrip=false, rstrip=false) | hash('sha256') }}"
  module_defaults:
    <<: *pulp_module_defaults
  tasks:
    - name: Create file content unit
      file_content:
        digest: "{{ file1_sha256 }}"
        relative_path: "data/file1.txt"
        state: present
      register: result
    - name: Verify create content unit
      assert:
        that:
          - result.changed == true
          - result.content.relative_path == "data/file1.txt"
          - result.content.sha256 == file1_sha256 or ansible_check_mode

    - name: Create file content unit (2nd try)
      file_content:
        digest: "{{ file1_sha256 }}"
        relative_path: "data/file1.txt"
        state: present
      register: result
    - name: Verify create content unit (2nd try)
      assert:
        that:
          - result.changed == false

    - name: List file content units
      file_content: {}
      register: result
    - name: Verify list file content units
      assert:
        that:
          - result.changed == false
          - result.contents | length >= 1

    - name: Read file content unit
      file_content:
        digest: "{{ file1_sha256 }}"
        relative_path: "data/file1.txt"
      register: result
    - name: Verify read file content unit
      assert:
        that:
          - result.changed == false
          - result.content.sha256 == file1_sha256
...
