---
- hosts: localhost
  gather_facts: false
  vars_files:
    - vars/server.yaml
  module_defaults: &pulp_module_defaults
    pulp.squeezer.deb_publication: &pulp_connection_details
      pulp_url: "{{ pulp_url }}"
      username: "{{ pulp_username }}"
      password: "{{ pulp_password }}"
      validate_certs: "{{ pulp_validate_certs | default(true) }}"
    pulp.squeezer.deb_remote:
      <<: *pulp_connection_details
    pulp.squeezer.deb_sync:
      <<: *pulp_connection_details
    pulp.squeezer.deb_repository:
      <<: *pulp_connection_details
  tasks:
    - name: Make repository absent
      pulp.squeezer.deb_repository:
        name: test_deb_repository
        state: absent
    - name: Make repository present
      pulp.squeezer.deb_repository:
        name: test_deb_repository
        state: present
    - name: Make remote present
      pulp.squeezer.deb_remote:
        name: test_deb_remote
        url: "{{ pulp_fixtures_url }}/debian/"
        distributions: ragnarok
        state: present
    - name: Sync remote into repository
      pulp.squeezer.deb_sync:
        remote: test_deb_remote
        repository: test_deb_repository
    - name: Clean openapi cache
      file:
        path: "{{ lookup('env', 'XDG_CACHE_HOME') | default('~/.cache') }}/squeezer"
        state: absent

- hosts: tests
  gather_facts: false
  vars_files:
    - vars/server.yaml
  module_defaults:
    <<: *pulp_module_defaults
  tasks:
    - name: Publish latest version of repository
      pulp.squeezer.deb_publication:
        repository: test_deb_repository
        state: present
      register: result
    - name: Verify publish latest version of repository
      assert:
        that:
          - result.changed == true
          - result.publication.repository_version is match("/pulp/api/v3/repositories/.*/versions/1/")
          - result.publication.simple
          - not result.publication.structured

    - name: Publish latest version of repository (2nd try)
      pulp.squeezer.deb_publication:
        repository: test_deb_repository
        state: present
      register: result
    - name: Verify publish latest version of repository (2nd try)
      assert:
        that:
          - result.changed == false

    - name: Publish latest version of repository via version number
      pulp.squeezer.deb_publication:
        repository: test_deb_repository
        version: 1
        state: present
      register: result
    - name: Verify publish latest version of repository via version number
      assert:
        that:
          - result.changed == false

    - name: List publications
      pulp.squeezer.deb_publication: {}
      register: result
    - name: Verify list publications
      assert:
        that:
          - result.changed == false
          - result.publications | length >= 1

    - name: Query publication of latest version of repository
      pulp.squeezer.deb_publication:
        repository: test_deb_repository
      register: result
    - name: Verify query publication of latest version of repository
      assert:
        that:
          - result.changed == false
          - result.publication.repository_version is match("/pulp/api/v3/repositories/.*/versions/1/")

    - name: Delete publication of latest version of repository
      pulp.squeezer.deb_publication:
        repository: test_deb_repository
        state: absent
      register: result
    - name: Verify delete publication of latest version of repository
      assert:
        that:
          - result.changed == true
          - not result.publication

    - name: Delete publication of latest version of repository (2nd try)
      pulp.squeezer.deb_publication:
        repository: test_deb_repository
        state: absent
      register: result
    - name: Verify delete publication of latest version of repository (2nd try)
      assert:
        that:
          - result.changed == false

    - name: Publish latest version of repository in structured mode
      pulp.squeezer.deb_publication:
        repository: test_deb_repository
        mode: structured
        state: present
      register: result
    - name: Verify publish latest version of repository in structured mode
      assert:
        that:
          - result.changed == true
          - result.publication.repository_version is match("/pulp/api/v3/repositories/.*/versions/1/")
          - not result.publication.simple
          - result.publication.structured

    - name: Delete publication of latest version of repository
      pulp.squeezer.deb_publication:
        repository: test_deb_repository
        state: absent
      register: result
    - name: Verify delete publication of latest version of repository
      assert:
        that:
          - result.changed == true
          - not result.publication

    - name: Publish latest version of repository in simple and structured mode
      pulp.squeezer.deb_publication:
        repository: test_deb_repository
        mode: simple_and_structured
        state: present
      register: result
    - name: Verify publish latest version of repository in structured mode
      assert:
        that:
          - result.changed == true
          - result.publication.repository_version is match("/pulp/api/v3/repositories/.*/versions/1/")
          - result.publication.simple
          - result.publication.structured

    - name: Delete publication of latest version of repository
      pulp.squeezer.deb_publication:
        repository: test_deb_repository
        state: absent
      register: result
    - name: Verify delete publication of latest version of repository
      assert:
        that:
          - result.changed == true
          - not result.publication

    - name: Publish latest version of repository in verbatim mode
      pulp.squeezer.deb_publication:
        repository: test_deb_repository
        mode: verbatim
        state: present
      register: result
    - name: Verify publish latest version of repository in verbatim mode
      assert:
        that:
          - result.changed == true
          - result.publication.repository_version is match("/pulp/api/v3/repositories/.*/versions/1/")
          - ansible_check_mode or result.publication.pulp_href is match("/pulp/api/v3/publications/deb/verbatim/.*/")

    - name: Delete publication of latest version of repository
      pulp.squeezer.deb_publication:
        repository: test_deb_repository
        mode: verbatim
        state: absent
      register: result
    - name: Verify delete publication of latest version of repository
      assert:
        that:
          - result.changed == true
          - not result.publication

- hosts: localhost
  gather_facts: false
  vars_files:
    - vars/server.yaml
  module_defaults:
    <<: *pulp_module_defaults
  tasks:
    - name: Make repository absent
      pulp.squeezer.deb_repository:
        name: test_deb_repository
        state: absent
    - name: Make remote absent
      pulp.squeezer.deb_remote:
        name: test_deb_remote
        state: absent
...
