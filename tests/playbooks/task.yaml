---
- hosts: localhost
  collections:
    - mdellweg.squeezer
  gather_facts: false
  vars_files:
    - vars/server.yaml
  module_defaults: &pulp_module_defaults
    pulp_file_remote: &pulp_connection_details
      pulp_url: "{{ pulp_url }}"
      username: "{{ pulp_username }}"
      password: "{{ pulp_password }}"
    pulp_file_sync:
      <<: *pulp_connection_details
    pulp_file_repository:
      <<: *pulp_connection_details
    pulp_task:
      <<: *pulp_connection_details
    pulp_delete_orphans:
      <<: *pulp_connection_details
  tasks:
    - name: Make repository absent
      pulp_file_repository:
        name: test_file_repository
        state: absent
    - name: Delete remaining artifacts and content
      pulp_delete_orphans: {}
    - name: Make repository present
      pulp_file_repository:
        name: test_file_repository
        state: present
    - name: Make remote present
      pulp_file_remote:
        name: test_file_remote
        url: "{{ pulp_fixtures_url }}/file-large/PULP_MANIFEST"
        download_concurrency: 1
        state: present
    - name: List all tasks
      pulp_task: {}
      register: result
    - name: Delete all tasks
      pulp_task:
        pulp_href: "{{ item.pulp_href }}"
        state: absent
      loop: "{{ result.tasks }}"
    - name: Sync remote into repository (async)
      pulp_file_sync:
        remote: test_file_remote
        repository: test_file_repository
      register: sync_task
      async: 120
      poll: 0

- hosts: tests
  collections:
    - mdellweg.squeezer
  gather_facts: false
  vars_files:
    - vars/server.yaml
  module_defaults:
    <<: *pulp_module_defaults
  tasks:
    - name: List tasks
      pulp_task: {}
      register: result
      until: result.tasks | length == 1
      retries: 5
      delay: 1
    - name: Verify list tasks
      assert:
        that:
          - result.changed == false
    - name: Extract task href
      set_fact:
        task_href: "{{ result.tasks[0].pulp_href }}"

    - name: Show task
      pulp_task:
        pulp_href: "{{ task_href }}"
      register: result
    - name: Verify show task
      assert:
        that:
          - result.changed == false
          - result.task.pulp_href == "{{ task_href }}"
          - result.task.name == "pulp_file.app.tasks.synchronizing.synchronize"
          - result.task.state == "running"

    - name: Cancel task
      pulp_task:
        pulp_href: "{{ task_href }}"
        state: canceled
      register: result
    - name: Verify cancel task
      assert:
        that:
          - result.changed == true
          - result.task.pulp_href == "{{ task_href }}"
          - result.task.state == "canceled"

    - name: Cancel task(2nd try)
      pulp_task:
        pulp_href: "{{ task_href }}"
        state: canceled
      register: result
    - name: Verify cancel task(2nd try)
      assert:
        that:
          - result.changed == false
          - result.task.pulp_href == "{{ task_href }}"
          - result.task.state == "canceled"

    - name: Wait for canceld task
      pulp_task:
        pulp_href: "{{ task_href }}"
        state: completed
      register: result
    - name: Verify wait for canceld task
      assert:
        that:
          - result.changed == false
          - result.task.pulp_href == "{{ task_href }}"
          - result.task.state == "canceled"

- hosts: localhost
  collections:
    - mdellweg.squeezer
  gather_facts: false
  vars_files:
    - vars/server.yaml
  module_defaults:
    <<: *pulp_module_defaults
  tasks:
    - name: Make repository absent
      pulp_file_repository:
        name: test_file_repository
        state: absent
    - name: Make remote absent
      pulp_file_remote:
        name: test_file_remote
        state: absent
...
