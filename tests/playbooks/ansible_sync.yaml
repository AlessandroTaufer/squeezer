---
- hosts: localhost
  collections:
    - pulp.squeezer
  gather_facts: false
  vars_files:
    - vars/server.yaml
  module_defaults: &pulp_module_defaults
    ansible_remote: &pulp_connection_details
      pulp_url: "{{ pulp_url }}"
      username: "{{ pulp_username }}"
      password: "{{ pulp_password }}"
    ansible_sync:
      <<: *pulp_connection_details
    ansible_repository:
      <<: *pulp_connection_details
  tasks:
    - name: Make repository absent
      ansible_repository:
        name: test_ansible_repository
        state: absent
    - name: Make repository present
      ansible_repository:
        name: test_ansible_repository
        state: present
    - name: Make role remote present
      ansible_remote:
        name: test_ansible_role_remote
        url: "https://galaxy.ansible.com/api/v1/roles/?namespace__name=ansible"
        state: present
    - name: Make collection remote present
      ansible_remote:
        content_type: collection
        name: test_ansible_collection_remote
        url: "https://galaxy-dev.ansible.com/api/v2/collections/testing/ansible_testing_content"
        state: present
    - name: Clean openapi cache
      file:
        path: "{{ lookup('env', 'XDG_CACHE_HOME') | default('~/.cache') }}/squeezer"
        state: absent

- hosts: tests
  collections:
    - pulp.squeezer
  gather_facts: false
  vars_files:
    - vars/server.yaml
  module_defaults:
    <<: *pulp_module_defaults
  tasks:
    - name: Sync role remote into repository
      ansible_sync:
        remote: test_ansible_role_remote
        repository: test_ansible_repository
      register: result
    - name: Verify sync role remote into repository
      assert:
        that:
          - result.changed == true
          - result.repository_version is match("/pulp/api/v3/repositories/ansible/ansible/.*/versions/1/")

    - name: Sync role remote into repository (2nd try)
      ansible_sync:
        remote: test_ansible_role_remote
        repository: test_ansible_repository
      register: result
    - name: Verify sync role remote into repository (2nd try)
      assert:
        that:
          - result.changed == false
          - result.repository_version is match("/pulp/api/v3/repositories/ansible/ansible/.*/versions/1/")

    - name: Dump repository
      ansible_repository:
        name: test_ansible_repository
      register: result
    - name: Verify repository_version in repository
      assert:
        that:
          - result.repository.latest_version_href is match("/pulp/api/v3/repositories/ansible/ansible/.*/versions/1/")

    - name: Sync collection remote into repository
      ansible_sync:
        content_type: collection
        remote: test_ansible_collection_remote
        repository: test_ansible_repository
      register: result
    - name: Verify sync collection remote into repository
      assert:
        that:
          - result.changed == true
          - result.repository_version is match("/pulp/api/v3/repositories/ansible/ansible/.*/versions/2/")

    - name: Sync collection remote into repository (2nd try)
      ansible_sync:
        content_type: collection
        remote: test_ansible_collection_remote
        repository: test_ansible_repository
      register: result
    - name: Verify sync collection remote into repository (2nd try)
      assert:
        that:
          - result.changed == false
          - result.repository_version is match("/pulp/api/v3/repositories/ansible/ansible/.*/versions/2/")

- hosts: localhost
  collections:
    - pulp.squeezer
  gather_facts: false
  vars_files:
    - vars/server.yaml
  module_defaults:
    <<: *pulp_module_defaults
  tasks:
    - name: Make repository absent
      ansible_repository:
        name: test_ansible_repository
        state: absent
    - name: Make role remote absent
      ansible_remote:
        name: test_ansible_role_remote
        state: absent
    - name: Make collection remote absent
      ansible_remote:
        content_type: collection
        name: test_ansible_collection_remote
        state: absent
...
